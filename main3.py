# hi, this 3 part!# class Person:#     __slots__ = '_fio', '_old', '_job',##     def __init__(self, fio, old, job):#         self._fio = fio#         self._old = old#         self._job = job## persons = [Person('Суворов', 52, 'полководец'),#            Person('Рахманинов', 50, 'пианист, композитор'),#            Person('Балакирев', 34, 'программист и преподаватель'),#            Person('Пушкин', 32, 'поэт и писатель')]# zadaniye 4.7.6# class Planet:#     def __init__(self, name, diametr, period_solar, period):#         self._name = name#         self._diametr = diametr#         self._period_solar = period_solar#         self._period = period### class SolarSystem:#     __obj = None#     __slots__ = ('_mercury', '_venus', '_earth', '_mars', '_jupiter', '_saturn', '_uranus', '_neptune')##     def __new__(cls, *args, **kwargs):#         if cls.__obj is None:#             cls.__obj = super().__new__(cls)#         return cls.__obj###     def __init__(self):#         self._mercury = Planet('Меркурий', 4878, 87.97, 1407.5)#         self._venus = Planet('Венера', 12104, 224.7, 5832.45)#         self._earth = Planet('Земля', 12756, 365.3, 23.93)#         self._mars = Planet('Марс', 6794, 687, 24.62)#         self._jupiter = Planet('Юпитер', 142800, 4330, 9.9)#         self._saturn = Planet('Сатурн', 120660, 10753, 10.63)#         self._uranus = Planet('Уран', 51118, 30665, 17.2)#         self._neptune = Planet('Нептун', 49528, 60150, 16.1)### s_system = SolarSystem()#zadaniye 4.7.7class Star:    __slots__ = '_name', '_massa', '_temp',    def __init__(self, name, massa, temp):        self._name = name        self._massa = massa        self._temp = tempclass WhiteDwarf(Star):    __slots__ = '_type_star', '_radius',    def __init__(self, name, massa, temp, type_star, radius):        super().__init__(name, massa, temp)        self._type_star = type_star        self._radius = radiusclass YellowDwarf(Star):    __slots__ = '_type_star', '_radius',    def __init__(self, name, massa, temp, type_star, radius):        super().__init__(name, massa, temp)        self._type_star = type_star        self._radius = radiusclass RedGiant(Star):    __slots__ = '_type_star', '_radius',    def __init__(self, name, massa, temp, type_star, radius):        super().__init__(name, massa, temp)        self._type_star = type_star        self._radius = radiusclass Pulsar(Star):    __slots__ = '_type_star', '_radius',    def __init__(self, name, massa, temp, type_star, radius):        super().__init__(name, massa, temp)        self._type_star = type_star        self._radius = radiusstars = [RedGiant('Альдебаран', 5, 3600, 'красный гигант', 45),         WhiteDwarf('Сириус А', 2.1, 9250, 'белый карлик', 2),         WhiteDwarf('Сириус B', 1, 8200, 'белый карлик', 0.01),         YellowDwarf('Солнце', 1, 6000, 'желтый карлик', 1)]white_dwarfs = list(filter(lambda x: isinstance(x, WhiteDwarf), stars))print(white_dwarfs)